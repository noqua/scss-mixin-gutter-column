@charset "utf-8";

/* ===============================================
# Mixin

  @include col(
	number of column, // *required
	gutter margin, // *required
	class name,
	display type(flex/float/grid),
	is list(true/false)
  ) {
	other styles
  };
=============================================== */
@mixin col(
	$column-count,
	$column-margin	: margin(),
	$selector		: '.item',
	$is-type		: flex,
	$is-list		: false
) {

	// if use in list(ul or ol)
	@if $is-list == true {
		// reset default margin,padding
		margin-left: 0;
		margin-right: 0;
		padding-left: 0;
		padding-right: 0;
		// end reset styles
		$selector : '> li';
	}

	#{$selector} {
		box-sizing: border-box;
	}

	// if is Flexbox or Float
	@if $is-type == flex or $is-type == float {
		$margin-size : #{$column-margin * ($column-count - 1)};

		#{$selector} {
			width: calc((100% - #{$margin-size}) / #{$column-count});
			@content;

			&:not(:nth-of-type(#{$column-count}n)) {
				margin-right: $column-margin;
			}
		}
	} // end

	// is Flexbox(default)
	@if $is-type == flex {
		display: flex;
		flex-wrap: wrap;
		justify-content: flex-start;
	} // end is Flexbox

	// is CSS Grid
	@else if $is-type == grid {
		display: grid;
		display: -ms-grid;

		// IE,Edge対応
		$grid-columns : '';
		@for $count from 1 through $column-count {
			@if $count == 1 {
				$grid-columns : unquote('1fr');
			} @else {
				$grid-columns : unquote($grid-columns + ' 1fr');
			}
		}

		grid-template-columns: repeat($column-count, 1fr);
		grid-gap: $column-margin;
		-ms-grid-columns: $grid-columns;
		-ms-grid-rows: auto;

		#{$selector} {
			@content;
		}
	} // end is CSS Grid

	// is Float
	@else if $is-type == float {
		&:before,&:after { content: ''; display: table;}
		&:after {clear: both;}
		zoom: 1;

		#{$selector} {
			float: left;
		}
	} // end is Float
}
// =============================================== */



section {
	margin-left: auto;
	margin-right: auto;
	width: 640px;

	+ section {
		margin-top: 60px;
	}
}

pre {
	padding: .5em;
	border: 1px solid #ddd;
	border-radius: 5px;
	background-color: #efefef;
}

.container {
	background-color: #EAD9FF;
}

.item,
li {
	padding: 30px;
	background-color: #0009A8;
	color: #ddd;
	text-align: center;
}

.sample-1 {
	@include col(4, 30px, '.child', flex, false) {
		@extend .item;
		&:nth-of-type(n+5) {
			margin-top: 30px;
		}
	}
}

.is-list {
	@include col(3, 30px, $is-list:true) {
		&:nth-of-type(n+4) {
			margin-top: 30px;
		}
	}
}

.is-flexbox {
	@include col(3, 30px) {
		&:nth-of-type(n+4) {
			margin-top: 30px;
		}
	}
}

.is-grid {
	@include col(3, 30px, $is-type:grid);
}

.is-float {
	@include col(3, 30px, $is-type:float) {
		&:nth-of-type(n+4) {
			margin-top: 30px;
		}
	}
}